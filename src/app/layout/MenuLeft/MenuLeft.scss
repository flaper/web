@import "../../../css/variables";

$local-menu-min-width: 4rem;
$local-menu-max-width: 12rem;
$local-border: 1px solid lighten($brand-secondary, 10);

@mixin big-left-collapsed {
  width: $local-menu-min-width;
  .ml-header {
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .nav-pills .nav-item .nav-link {
    padding-left: 0;
    padding-right: 0;
    text-align: center;
    .label {
      display: none;
    }
  }
}

:host {
  flex-shrink: 0;
  display: flex;
}

.navbar-brand {
  float: none;
  margin-left: 0.2rem;
  margin-right: 0.1rem;
  color: #fff;
}

.my-avatar {
  $value: 2.3rem;
  height: $value;
  width: $value;
  border: 2px solid lighten($brand-secondary, 10);
  border-radius: $value / 2;
  cursor: pointer;
}

.ml {
  .ml-header {
    height: 5rem;
    padding-top: 1.4rem;
    padding-right: 1rem;
    font-size: 1rem;
    .fa-bars {
      color: #fff;
      padding: 0.5rem 0.55rem 0.4rem;
      border-radius: 0.2rem;
      border: $local-border;
      cursor: pointer;
      transition: $transition-all;
      &:hover {
        background-color: darken($brand-secondary, 7);
      }
    }
  }
  background-color: $brand-secondary;
  width: $local-menu-max-width;
  flex-shrink: 0;
  flex-grow: 0;
  border-right: $local-border;
  .nav-pills {
    overflow: hidden;
    .nav-item {
      margin-top: 0;
      transition: $transition-all;
      border-bottom: $local-border;
      &:hover {
        background-color: darken($brand-secondary, 10);
      }
      .nav-link {
        color: #fff;
        white-space: nowrap; //not take 2 lines while toggling
        .icon-container {
          display: inline-block;
          width: 1rem;
        }
        &.nav-user {
          font-size: 1.1rem;
          img {
            width: 2rem;
            height: 2rem;
          }
        }
      }
    }
    .nav-item:first-child {
      border-top: $local-border;
    }

  }

  transition: $transition-all;
  @media (min-width: map-get($grid-breakpoints, 'lg')+1) {
    &.ml-toggle {
      @include big-left-collapsed;
    }
  }

  @media (max-width: map-get($grid-breakpoints, 'lg')) and (min-width: map-get($grid-breakpoints, 'sm')+1) {
    &:not(.ml-toggle) {
      @include big-left-collapsed;
    }
  }

  @media (max-width: map-get($grid-breakpoints, 'sm')) {
    width: 100%;
    .ml-header {
      padding: 0.4rem;
      height: 3rem;
    }
    .mobile-collapsed {
      height: 0;
    }
  }
}
